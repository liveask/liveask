name: push

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  TRUNK_VERSION: v0.18.8

jobs:

# CHANGE DETECTION FOR CONDITIONAL NEXT STEPS

  changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      be: ${{ steps.filter.outputs.be }}
      fe: ${{ steps.filter.outputs.fe }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            be:
              - 'backend/**'
              - 'async-redis-session/**'
              - 'backend-e2e/**'
              - 'shared/**'
              - '.github/**'
              - 'Cargo.lock'
              - 'Cargo.toml'
              - 'Cranky.toml'
            fe:
              - 'frontend/**'
              - 'shared/**'
              - '.github/**'
              - 'Cargo.lock'
              - 'Cargo.toml'
              - 'Cranky.toml'

# CHECK / TEST

  check_and_test_backend:
    needs: changes
    if: ${{ needs.changes.outputs.be == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/check_be

  check_and_test_frontend:
    needs: ["changes"]
    if: ${{ needs.changes.outputs.fe == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/check_fe

# DEPLOY

# BACKEND

  be_deploy_beta:
    runs-on: ubuntu-latest
    environment: beta
    needs: ["check_and_test_backend"]
    steps:
    - uses: actions/checkout@v4
    - name: Restore cargo cache
      uses: Swatinem/rust-cache@v2
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    - name: BE release build
      run: |
        cd backend
        cargo build --release
        mkdir linux_bin
        cp ../target/release/liveask-server linux_bin/server
    - name: Docker build
      run: |
        cd backend
        docker build -t liveask/server:latest .
    - name: Login to Docker Hub
      run: |
        docker login \
        -u liveask \
        -p ${{ secrets.DOCKER_PASSWORD }}
    - name: Publish Docker image
      run: |
        docker push liveask/server
        docker tag liveask/server liveask/server:beta
        docker push liveask/server:beta

    # comment when disabling beta (1/3)
    # - uses: ./.github/actions/deploy_ecs
    #   with:
    #     cluster: la-ecs-cluster-beta
    #     aws_key_id: ${{ secrets.AWS_KEY_ID }}
    #     aws_key_secret: ${{ secrets.AWS_KEY_SECRET }}
    #     aws_region: ${{ secrets.AWS_DEFAULT_REGION }}

    # - name: Set short git SHA
    #   id: vars
    #   run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
    # - name: Create Sentry release
    #   uses: getsentry/action-release@v1
    #   env:
    #     SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
    #     SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
    #     SENTRY_PROJECT: la-server
    #   with:
    #     environment: beta
    #     set_commits: skip
    #     version: ${{ steps.vars.outputs.sha_short }}

  backend-e2e:
    runs-on: ubuntu-latest
    needs: ["be_deploy_beta"]
    steps:
    - uses: actions/checkout@v4
    - name: Restore cargo cache
      uses: Swatinem/rust-cache@v2
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    - name: Test Prod
      run: |
        cd backend-e2e
        make e2e-test-remote
    # comment when disabling beta (2/3)
    # - name: Test Beta
    #   run: |
    #     cd backend-e2e
    #     make e2e-test-beta

# FRONTEND

  fe_deploy_beta:
    runs-on: ubuntu-latest
    environment: beta
    needs: ["check_and_test_frontend"]
    steps:
    - uses: actions/checkout@v4
    - name: Restore cargo cache
      uses: Swatinem/rust-cache@v2
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        target: wasm32-unknown-unknown
        components: clippy
    - name: Install cargo-make
      run: |
        which cargo-make || cargo install cargo-make
    - name: Install Trunk
      run: |
        wget -qO- https://github.com/thedodd/trunk/releases/download/${TRUNK_VERSION}/trunk-x86_64-unknown-linux-gnu.tar.gz | tar -xzf-
        mv trunk /usr/local/bin/trunk
        trunk --version
    - name: Build
      env:
        LA_ENV: "beta"
      run: |
        cd frontend
        #TODO: un-dupe once we have a better solution to change FE configs
        cargo make cargo-check
        cargo make build-and-check

    # comment when disabling beta (3/3)
    # - name: Deploy
    #   env:
    #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_KEY_ID }}
    #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_KEY_SECRET }}
    #     AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
    #     AWS_CLOUDFRONT_DISTRO: 'EJFNBPSNYQSP9'
    #   run: |
    #     cd frontend/dist
    #     aws s3 sync . s3://beta.live-ask.com --acl public-read --no-progress --delete --cache-control "public, max-age=86400" --exclude "index.html"
    #     aws s3 cp ./index.html s3://beta.live-ask.com --acl public-read --no-progress --cache-control "public, max-age=120"
    #     aws cloudfront create-invalidation --distribution-id ${AWS_CLOUDFRONT_DISTRO} --paths "/*"

    - name: Set short SHA
      id: vars
      run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
    - name: Create Sentry release
      uses: getsentry/action-release@v1
      env:
        SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
        SENTRY_PROJECT: liveask
      with:
        environment: beta
        set_commits: skip
        version: ${{ steps.vars.outputs.sha_short }}
